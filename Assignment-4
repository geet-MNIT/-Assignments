1. What exactly is []?
A. Thi srepresent an empty list.
2. In a list of values stored in a variable called spam, how would you assign the value 'hello' as the third value? (Assume [2, 4, 6, 8, 10] are in spam.)
A. spam[2]='hello'
Let's pretend the spam includes the list ['a', 'b', 'c', 'd'] for the next three queries.
3. What is the value of spam[int(int('3' * 2) / 11)]?
A. 'd'
4. What is the value of spam[-1]? 
A. 'd'
5. What is the value of spam[:2]?
A. ['a', 'b']
Let's pretend bacon has the list [3.14, 'cat,' 11, 'cat,' True] for the next three questions. I am Ignoring the syntax error
6. What is the value of bacon.index('cat')?
A. 1
7. How does bacon.append(99) change the look of the list value in bacon?
A. [3.14, 'cat,' 11, 'cat,' True, 99]
8. How does bacon.remove('cat') change the look of the list in bacon?
A. [3.14, 'cat,' 11, True, 99]
9. What are the list concatenation and list replication operators?
A. for concatenation "+" is used and for replication "*" is used.
10. What is difference between the list methods append() and insert()?
append() method always add the value in the end of the list, whereas insert takes in position and value to insert at that position, eg- bacon.insert(2,'monkey').
11. What are the two methods for removing items from a list?
A. pop() and remove()
12. Describe how list values and string values are identical.
A. They both are ordered collection of data elements.
13. What's the difference between tuples and lists?
A. tuples are immutable and list are changeable, tuples are denoted by () and list is denoted by []. 
14. How do you type a tuple value that only contains the integer 42?
A. tup1=(42)
15. How do you get a list value's tuple form? How do you get a tuple value's list form?
A. list1=[(1,2,3),("geet", "singh"),(5, 6, 7)] tup2=([1, 5, 86], ["hey", "DS"], [52,63])
16. Variables that "contain" list values are not necessarily lists themselves. Instead, what do they contain?
A. They contain integer or string type values.
17. How do you distinguish between copy.copy() and copy.deepcopy()?
A. copy.copy() does not create a new object, just refer to the same object but copy.deepcopy() creates another object in memory and copies the same content there.
